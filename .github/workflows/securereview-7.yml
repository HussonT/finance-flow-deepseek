name: üîí SecureReview-7 Security Scanner (Cursor) - Fixed

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  security-review:
    name: SecureReview-7 Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: cursor-env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Debug - Check if secret is available
        run: |
          if [ -z "$CURSOR_API_KEY" ]; then
            echo "CURSOR_API_KEY secret is NOT set or empty"
          else
            echo "CURSOR_API_KEY secret is set (length: ${#CURSOR_API_KEY})"
          fi
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}

      - name: Install Cursor CLI
        run: |
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: Configure git identity
        run: |
          git config user.name "Cursor Agent"
          git config user.email "cursoragent@cursor.com"

      - name: Run SecureReview-7 Security Analysis
        id: security_review
        continue-on-error: true
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          MODEL: grok-5
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Starting cursor-agent analysis..."

          # Run cursor-agent with proper configuration
          cursor-agent -p "Analyze PR #${{ github.event.pull_request.number }} for security issues. Respond with: VERDICT: APPROVE or VERDICT: BLOCK" \
            --model "$MODEL" \
            --output-format text \
            --force > cursor_output.txt 2>&1 || true

          echo "=== Cursor Agent Output ==="
          cat cursor_output.txt || echo "No output captured"
          echo "=== End Output ==="

          # Extract verdict
          if grep -q "VERDICT: BLOCK" cursor_output.txt; then
            echo "verdict=BLOCK" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "verdict=APPROVE" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Post Security Review Results
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const verdict = '${{ steps.security_review.outputs.verdict }}' || 'ERROR';

            let commentBody = `## üîí SecureReview-7 Security Analysis\n\n`;

            if (verdict === 'BLOCK') {
              commentBody += `### ‚ùå VERDICT: BLOCKED\n\n`;
            } else if (verdict === 'APPROVE') {
              commentBody += `### ‚úÖ VERDICT: APPROVED\n\n`;
            } else {
              commentBody += `### ‚ö†Ô∏è ERROR: Could not complete analysis\n\n`;
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: commentBody
            });