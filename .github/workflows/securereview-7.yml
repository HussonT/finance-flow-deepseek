name: ðŸ”’ SecureReview-7 Security Scanner (Cursor)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: write

defaults:
  run:
    shell: bash

# NOTE: This workflow uses the Cursor CLI agent for security analysis.
# Ensure CURSOR_API_KEY secret is configured in your repository.

jobs:
  security-review:
    name: SecureReview-7 Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: cursor-env
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Debug - Check if secret is available
        run: |
          if [ -z "$CURSOR_API_KEY" ]; then
            echo "CURSOR_API_KEY secret is NOT set or empty"
          else
            echo "CURSOR_API_KEY secret is set (length: ${#CURSOR_API_KEY})"
          fi
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
        
      - name: Install Cursor CLI
        run: |
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: Run SecureReview-7 Security Analysis
        id: security_review
        continue-on-error: true  # Continue even if Cursor fails
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
          REPOSITORY: ${{ github.repository }}
        run: |
          cursor-agent -p "You have full access to git, GitHub CLI (gh), and PR operations.
          You are SecureReview-7, an advanced security analysis agent for FinanceFlow.

          Review PR #${PR_NUMBER} in repository ${REPOSITORY}.
          Title: ${PR_TITLE}
          Description: ${PR_BODY}

          Perform a comprehensive security analysis of the PR changes.
          Use GitHub CLI to fetch the PR diff and analyze for:
          - Security vulnerabilities
          - Code injection risks
          - Authentication/authorization issues
          - Data exposure risks
          - Supply chain attacks

          Based on your analysis, either:
          1. Approve the PR if it's secure using: gh pr review ${PR_NUMBER} --approve --body 'Security review passed'
          2. Request changes if there are security issues using: gh pr review ${PR_NUMBER} --request-changes --body 'Security issues found: [details]'
          3. If critical vulnerabilities are found, create a security patch branch and PR

          You have full autonomy to handle the entire security review workflow including creating patches if needed.
          Use 'gh pr diff ${PR_NUMBER}' to get the changes and analyze them thoroughly.
          Post your findings as a PR comment using 'gh pr comment ${PR_NUMBER} --body [your analysis]'."

          echo "SECURITY_REVIEW_COMPLETED=true" >> "$GITHUB_ENV"
      - name: Post completion notification
        if: always() && env.SECURITY_REVIEW_COMPLETED != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Only post if the Cursor agent didn't complete successfully
            const cursorOutcome = '${{ steps.security_review.outcome }}';

            if (cursorOutcome === 'failure') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `## ðŸ”’ SecureReview-7 Security Analysis\n\nThe security review could not be completed. Please check the workflow logs for details.`
              });
            }