name: Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  pull-requests: write
  contents: read
  issues: write

jobs:
  code-review:
    runs-on: ubuntu-latest
    environment: cursor-env
    # Skip automated code review for draft PRs
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Cursor CLI
        run: |
          curl https://cursor.com/install -fsS | bash
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH

      - name: Configure git identity
        run: |
          git config user.name "Cursor Agent"
          git config user.email "cursoragent@cursor.com"

      - name: Debug - Check if API key is available
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
        run: |
          if [ -z "$CURSOR_API_KEY" ]; then
            echo "CURSOR_API_KEY secret is NOT set or empty"
            exit 1
          else
            echo "CURSOR_API_KEY secret is set (length: ${#CURSOR_API_KEY})"
          fi

      - name: Perform automated code review
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          MODEL: gpt-5
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BLOCKING_REVIEW: ${{ vars.BLOCKING_REVIEW || 'false' }}
        run: |
          PROMPT=$(cat << 'EOF'
          You are a code review assistant. Analyze the PR changes and post helpful inline comments.

          Get the PR diff: gh pr diff ${{ github.event.pull_request.number }}
          Get the changed files: gh pr diff ${{ github.event.pull_request.number }} --name-only

          Focus on:
          - Security issues
          - Logic errors
          - Performance problems
          - Resource leaks

          Post inline comments on specific lines using:
          gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/comments -X POST -H "Accept: application/vnd.github+json" -f body="Your comment" -f commit_id=${{ github.event.pull_request.head.sha }} -f path="file.js" -f line=42

          Keep comments concise and actionable. Use emojis: üîí üö® ‚ö†Ô∏è ‚ö°

          Always set CRITICAL_ISSUES_FOUND based on whether you found critical security issues:
          - If you found critical issues (security vulnerabilities): echo "CRITICAL_ISSUES_FOUND=true" >> $GITHUB_ENV
          - If no critical issues found: echo "CRITICAL_ISSUES_FOUND=false" >> $GITHUB_ENV

          The workflow will decide whether to block based on the BLOCKING_REVIEW setting.
          EOF
          )

          echo "Starting Cursor Agent code review..."
          cursor-agent --force --model "$MODEL" --output-format=text --print "$PROMPT"
          echo "Cursor Agent completed. Checking results..."

      - name: Check blocking review results
        if: env.BLOCKING_REVIEW == 'true'
        run: |
          echo "Checking for critical issues..."
          echo "CRITICAL_ISSUES_FOUND: ${CRITICAL_ISSUES_FOUND:-unset}"

          if [ "${CRITICAL_ISSUES_FOUND:-false}" = "true" ]; then
            echo "‚ùå Critical issues found and blocking review is enabled. Failing the workflow."
            exit 1
          else
            echo "‚úÖ No blocking issues found."
          fi